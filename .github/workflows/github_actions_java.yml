name: Build and deploy JAR app

on: [push]
  
permissions:
  contents: read
  packages: write

jobs:

    
  build:
    runs-on: ubuntu-latest
      
    steps:
  
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: make application.properties
        run: |
          mkdir -p ./src/main/resources
          cd ./src/main/resources
          touch ./application.properties
          echo "${{ secrets.APPLICATION }}" > ./application.properties

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew clean build -x test
    
      - name: Get Github Actions IP
        id: ip
        uses: haythem/public-ip@v1.3
          
      - name: Docker build & push to prod
        if: contains(github.ref, 'main')
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -f ./dockerfilejava -t ${{ secrets.DOCKER_USERNAME }}/cicdtest .
          docker push ${{ secrets.DOCKER_USERNAME }}/cicdtest
          
  deploy:
    # needs를 통해 build job이 수행 성공시에 작업되도록 설정
    needs: build
    runs-on: ubuntu-latest

    steps:
  
    ## deploy to production
    - name: Deploy to prod
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_PROD }} # EC2 퍼블릭 IPv4 DNS
        username: root
        password: ${{secrets.HOST_PWD}} #id_ed25519  # secret
        port: 22
        envs: |
          GITHUB_SHA
        script: |
          sudo systemctl enable mysql
          sudo systemctl start mysql
          sudo systemctl status mysql
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo systemctl start docker
          sudo systemctl enable docker
          sudo docker ps
          docker info
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/cicdtest
          docker info
          sudo docker run -d -p 0.0.0.0:8080:8080 ${{ secrets.DOCKER_USERNAME }}/cicdtest
          sudo docker image prune -f
          sudo docker ps
          sudo ls
