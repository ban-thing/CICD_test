# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a package using Gradle and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#Publishing-using-gradle

name: deploy spring

on: [pull_request]

jobs:
  build:

    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up python 3.9
      uses: actions/setup-python@v4
      with: 
        python-version: '3.9'

    - name: Docker build & push to prod
      if: contains(github.ref, 'main')
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PWD }}
        docker build -f ./dockerfilejava -t ${{ secrets.DOCKER_USERNAME }}/cicdtestjava .
        docker push ${{ secrets.DOCKER_USERNAME }}/cicdtestjava

  deploy:
    needs: build
    runs-on: ubunto-24.04

    steps:
    - name: Deploy to prod
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_PROD }}
        username: root
        password: ${{ secrets.HOST_PWD }}
        envs: 
          GITHUB_SHA
        script: |
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/cicdtestjava
          sudo docker run -d -p 8080:8080 ${{ secrets.DOCKER_USERNAME }}/cicdtestjava
          sudo docker image prune -f
