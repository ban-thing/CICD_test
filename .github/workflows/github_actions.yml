# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: CI/CD using github actions & docker(Python)

on: [push]

jobs:
  CI-CD:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: Set up python 3.9.11
      uses: actions/setup-python@v5
      with:
        python-version: "3.9.11"
    - name: Build release distributions
      run: |
        # NOTE: put your own distribution build steps here.
        python -m pip install build
        python -m build

    - name: Upload distributions
      uses: actions/upload-artifact@v4
      with:
        name: release-dists
        path: dist/
    
    # docker build & push to production
    - name: Docker build & push to prod
      if: contains(github.ref, 'main')
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -f dockerfile -t ${{ secrets.DOCKER_USERNAME }}/cicdtest .
        docker push ${{ secrets.DOCKER_USERNAME }}/cicdtest

    ## deploy to production
    - name: Deploy to prod
      uses: appleboy/ssh-action@master
      id: deploy-prod
      if: contains(github.ref, 'main')
      with:
        host: ${{ secrets.HOST_PROD }} # EC2 퍼블릭 IPv4 DNS
        username: root
        key: ${{ secrets.PRIVATE_KEY }} #id_ed25519
        envs: GITHUB_SHA
        script: |
          sudo docker ps
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/cicdtest
          sudo docker run -d -p 8082:8082 ${{ secrets.DOCKER_USERNAME }}/cicdtest
          sudo docker image prune -f


  
