# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  CI-CD:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4
    - name: docker version check
      run: |
        docker --version
    # docker build & push to production
    - name: Docker build & push to prod
      if: contains(github.ref, 'main')
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -f ./dockerfile -t ${{ secrets.DOCKER_USERNAME }}/cicdtest .
        docker push ${{ secrets.DOCKER_USERNAME }}/cicdtest

    ## deploy to production
    - name: Deploy to prod
      uses: appleboy/ssh-action@master
      id: deploy-prod
      if: contains(github.ref, 'main')
      with:
        host: ${{ secrets.HOST_PROD }} # EC2 퍼블릭 IPv4 DNS
        username: root
        key: ${{ secrets.PRIVATE_KEY }} #id_ed25519
        envs: GITHUB_SHA
        script: |
          docker ps
          docker pull ${{ secrets.DOCKER_USERNAME }}/cicdtest
          docker run -d -p 8082:8082 ${{ secrets.DOCKER_USERNAME }}/cicdtest
          docker image prune -f
    
    - name: Set up python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'

    


  
