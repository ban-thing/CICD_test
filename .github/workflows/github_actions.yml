# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: CI/CD using github actions & docker

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:

      
    - uses: actions/checkout@v4
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
    
    - name: Set up python 3.9 
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Set up MySQL
    - uses: mirromutth/mysql-action@v1.1
      with:
        host port: 3306
        container port: 3306
        mysql database: 'testdb'
        mysql root password: ${{ secrets.DB_PASSWORD }}
  
    - name: docker version check
      run: |
        docker --version
        
    # docker build & push to production
    - name: Docker build & push to prod
      if: contains(github.ref, 'main')
      run: |
        docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
        docker build -f ./dockerfile -t ${{ secrets.DOCKER_USERNAME }}/cicdtest .
        docker push ${{ secrets.DOCKER_USERNAME }}/cicdtest
        
  deploy:
    # needs를 통해 build job이 수행 성공시에 작업되도록 설정
    needs: build
    runs-on: ubuntu-latest

    steps:
    ## deploy to production
    - name: Deploy to prod
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST_PROD }} # EC2 퍼블릭 IPv4 DNS
        username: root
        key: ${{ secrets.PRIVATE_KEY }} #id_ed25519
        envs: GITHUB_SHA
        script: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo systemctl start docker
          sudo systemctl enable docker
          sudo docker ps
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/cicdtest
          sudo docker run -d -p 8082:8082 ${{ secrets.DOCKER_USERNAME }}/cicdtest
          sudo docker image prune -f
